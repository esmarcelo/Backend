package com.grocerygogetters.dao;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.query.Query;

import com.grocerygogetters.model.Orders;
import com.grocerygogetters.model.Users;
import com.grocerygogetters.util.HibernateUtil;

public class OrdersDaoImpl implements OrdersDao {
	
	private static OrdersDaoImpl ordersDaoImpl;
	
	private OrdersDaoImpl() {
	}
	
	public static OrdersDaoImpl getInstance() {
		if (ordersDaoImpl == null) {
			ordersDaoImpl = new OrdersDaoImpl();
		}
		return ordersDaoImpl;
	}

	@Override
	public List<Orders> getOrders() {
		Session s = HibernateUtil.getSession();
		List<Orders> orders = s.createQuery("from Orders", Orders.class).list();
		s.close();
		return orders;
	}

	@Override
	public Orders getOrderById(int id) {
		// TODO Auto-generated method stub
		Session s = HibernateUtil.getSession();
		Orders o = s.load(Orders.class, id);
		s.close();
		return o;
	}

	@Override
	public int createOrder(Orders o) {
		Session s = HibernateUtil.getSession();
		Transaction tx = s.beginTransaction();
		int ordersPK = (int) s.save(o);
		tx.commit();
		s.close();
		return ordersPK;
	}

	@Override
	public void updateOrder(Orders o) {
		Session s = HibernateUtil.getSession();
		Transaction tx = s.beginTransaction();
		s.update(o);
		tx.commit();
		s.close();
	}

	@Override
	public void deleteOrderById(int id) {
		Session s = HibernateUtil.getSession();
		Transaction tx = s.beginTransaction();
		Orders o = s.get(Orders.class, id);
		if(o != null) {
			s.delete(o);
		}
		tx.commit();
		s.close();
	}

	@Override
	public List<Orders> getOrdersByUserID(Users u) {
		Session s = HibernateUtil.getSession();
		String hql = "from Orders where USER_ID = :UID";
		Query<Orders> scq = s.createQuery(hql,Orders.class);
		scq.setParameter("UID",u.getUser_id());
		List<Orders> sc = scq.list();
		s.close();
		return sc;
	}

	@Override
	public List<Orders> getOrdersByDriverID(Users u) {
			Session s = HibernateUtil.getSession();
			String hql = "from Orders where DRIVER_ID = :DID";
			Query<Orders> ocq = s.createQuery(hql, Orders.class);
			ocq.setParameter("DID", u.getUser_id());
			List<Orders> ordlst = ocq.list();
			s.close();
			return ordlst;
	}

	@Override
	public List<Orders> getDeliveredOrders() {
		Session s = HibernateUtil.getSession();
		String hql = "from Orders where ORDER_STATUS = :OSTAT";
		Query<Orders> ocq = s.createQuery(hql, Orders.class);
		ocq.setParameter("OSTAT", "Delivered");
		List<Orders> ordlst = ocq.list();
		return ordlst;
	}
	
	
}
